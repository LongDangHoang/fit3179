{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 400,
  "height": 300,
  "autosize": "pad",
  "title": {
    "text": "Productivity measured in yield (tonnes/animal) over time",
    "frame": "group"
  },

  "data": [
    {
      "name": "world_map",
      "url": "https://raw.githubusercontent.com/LongDangHoang/fit3179/master/data/ne_110m_admin_0_countries_geo.json",
      "format": {"type": "topojson", "feature": "ne_110m_admin_0_countries"},
      "transform": [
        {
          "type": "formula",
          "expr": "'Data is not available for ' + datum.properties.NAME",
          "as": "note"
        }
      ]
    },
    {
      "name": "graticule",
      "transform": [
        { "type": "graticule", "step": [30, 30] }
      ]
    },
    {
      "name": "ocean_map",
      "url": "https://raw.githubusercontent.com/FIT3179/Vega-Lite/main/7_others/oceans.topojson",
      "format": {"type": "topojson", "feature": "oceans"}
    },
    {
      "name": "source",
      "url": "https://raw.githubusercontent.com/LongDangHoang/fit3179/master/data/processed/yield_major_categories_per_country_2000-2020.csv",
      "format": {"type": "csv", "delimter": ","},
      "transform": [
        {"type": "filter", "expr": "datum['Item Hierarchy Type'] == 'Dairy and egg'"},
        {
          "type": "lookup",
          "from": "world_map",
          "key": "properties.ISO_A2",
          "fields": ["ISO-A2"],
          "as": ["geo"]
        }
      ]
    },
    {
      "name": "yield_csv",
      "source": "source",
      "transform": [
        {"type": "filter", "expr": "datum.Year == Year_Filter"},
        {
          "type": "formula",
          "expr": "toNumber(datum.Quantity)", 
          "as": "Yield (tonnes/animal)"
        }
      ]
    },
    {
      "name": "annotation",
      "source": "source",
      "transform": [
        {
          "type": "filter",
          "expr": "(datum.Year == 2000) || (datum.Year == 2020)"
        },
        {
          "type": "formula",
          "expr": "toNumber(datum.Quantity)", 
          "as": "num_quantity"
        },
        {
          "type": "window",
          "fields": ["num_quantity"],
          "ops": ["first_value"],
          "as": ["quantity_2020"],
          "frame": [null, null],
          "sort": {"field": "Year", "order": "descending"},
          "groupby": ["Area"]
        },
        {
          "type": "window",
          "fields": ["num_quantity"],
          "ops": ["last_value"],
          "as": ["quantity_2000"],
          "frame": [null, null],
          "sort": {"field": "Year", "order": "descending"},
          "groupby": ["Area"]
        },
        {
          "type": "formula",
          "expr": "(datum.quantity_2020 - datum.quantity_2000)/datum.quantity_2000 * 100",
          "as": "growth"
        },
        {
          "type": "joinaggregate",
          "fields": ["growth"],
          "ops": ["max"],
          "as": ["max_growth"]
        },
        {
          "type": "filter",
          "expr": "(datum.Year == 2020) && (datum.growth == datum.max_growth)"
        },
        {
          "type": "formula",
          "expr": "['Country: ' + datum.Area, 'grows productivity by ' + format(datum.growth, '.2f') + '% in 20 years']",
          "as": "annotation_text"
        },
        {
          "type": "geopoint", 
          "projection": "projection", 
          "fields": ["Longitude (average)", "Latitude (average)"],
          "as": ["projected_longitude", "projected_latitude"]
        }
      ]
    }
  ],

  "signals": [
    {
      "name": "Year_Filter",
      "value": 2020,
      "bind": {
        "input": "range",
        "min": 2000,
        "max": 2020,
        "step": 1,
        "name": "Year"
      }
    },
    { "name": "tx", "update": "width / 2" },
    { "name": "ty", "update": "height / 2" },
    {
      "name": "scale",
      "value": 100,
      "on": [{
        "events": {"type": "wheel", "consume": true},
        "update": "clamp(scale * pow(1.0005, -event.deltaY * pow(16, event.deltaMode)), 100, 2000)"
      }]
    },
    {
      "name": "angles",
      "value": [0, 0],
      "on": [{
        "events": "mousedown",
        "update": "[rotateX, centerY]"
      }]
    },
    {
      "name": "cloned",
      "value": null,
      "on": [{
        "events": "mousedown",
        "update": "copy('projection')"
      }]
    },
    {
      "name": "start",
      "value": null,
      "on": [{
        "events": "mousedown",
        "update": "invert(cloned, xy())"
      }]
    },
    {
      "name": "drag", "value": null,
      "on": [{
        "events": "[mousedown, window:mouseup] > window:mousemove",
        "update": "invert(cloned, xy())"
      }]
    },
    {
      "name": "delta", "value": null,
      "on": [{
        "events": {"signal": "drag"},
        "update": "[drag[0] - start[0], start[1] - drag[1]]"
      }]
    },
    {
      "name": "rotateX", "value": 0,
      "on": [{
        "events": {"signal": "delta"},
        "update": "angles[0] + delta[0]"
      }]
    },
    {
      "name": "centerY", "value": 0,
      "on": [{
        "events": {"signal": "delta"},
        "update": "clamp(angles[1] + delta[1], -60, 60)"
      }]
    }
  ],

  "projections": [
    {
      "name": "projection",
      "type": "equalEarth",
      "scale": {"signal": "scale"},
      "rotate": [{"signal": "rotateX"}, 0, 0],
      "center": [0, {"signal": "centerY"}],
      "translate": [{"signal": "tx"}, {"signal": "ty"}]
    }
  ],

  "marks": [
    {
      "type": "shape", 
      "from": {"data": "ocean_map"},
      "transform": [
        {"type": "geoshape", "projection": "projection"}
      ],
      "encode": {
        "update": {"fill": {"value": "lightcyan"}}
      }
    },
    {
      "type": "shape",
      "from": {"data": "world_map"},
      "transform": [
        {"type": "geoshape", "projection": "projection" }
      ],
      "encode": {
        "update": {
          "tooltip": {"signal": "datum[\"note\"]"},
          "fill": {"value": "lightgray"},
          "strokeWidth": {"value": 1},
          "stroke": {"value": "white"}
        }
      }
    },
    {
      "type": "shape",
      "from": {"data": "graticule"},
      "encode": {
        "enter": {
          "strokeWidth": {"value": 1},
          "stroke": {"value": "#ddd"},
          "fill": {"value": null}
        }
      },
      "transform": [
        { "type": "geoshape", "projection": "projection" }
      ]
    },
    {
      "type": "shape",
      "style": "geoshape",
      "from": {"data": "yield_csv"},
      "transform": [
        {"type": "geoshape", "projection": "projection", "field": "datum[\"geo\"]"}
      ],
      "encode": {
        "update": {
          "fill": {"scale": "color", "field": "Yield (tonnes/animal)"},
          "stroke": {"value": "white"},
          "tooltip": {
            "signal": "{\"Country\": isValid(datum[\"Area\"]) ? datum[\"Area\"] : \"\"+datum[\"Area\"], \"Yield (tonnes/animal)\": format(datum[\"Yield (tonnes/animal)\"], \".5f\")}"
          }
        }
      }
    },
    {
      "type": "text",
      "from": {"data": "annotation"},
      "align": {"value": "left"},
      "baseline": {"value": "bottom"},
      "encode": {
        "update": {
          "x": {"field": "projected_longitude", "type": ""},
          "y": {"field": "projected_latitude"},
          "fill": {"value": "purple"},
          "text": {
            "signal": "datum['annotation_text']"
          }
        }
      }
    },
    {
      "type": "shape",
      "style": "geoshape",
      "from": {"data": "annotation"},
      "transform": [
        {"type": "geoshape", "projection": "projection", "field": "datum[\"geo\"]"}
      ],
      "encode": {
        "update": {
          "stroke": {"value": "red"}
        }
      }
    }
  ],

  "scales": [
    {
      "name": "color",
      "type": "quantize",
      "domain": [0, 1],
      "range": {
        "scheme": "yellowgreenblue", "count": 10
      }
    }
  ],

  "legends": [
      {
          "fill": "color",
          "labelOverlap": "greedy",
          "symbolType": "circle",
          "format": "",
          "title": "Yield (tonnes/animal)",
          "encode": {"symbols": {"update": {"stroke": {"value": "lightgrey"}}}}
      }
  ],

  "config": {
    "style": {
      "cell": {
        "stroke": "transparent"
      }
    }
  }
}